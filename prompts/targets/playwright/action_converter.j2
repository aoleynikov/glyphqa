{% extends "targets/playwright/base_converter.j2" %}

## Task
Convert this action to Playwright code: {{ step_description }}

## HUMAN-LIKE REASONING APPROACH
You are building a test that should work, not just follow the scenario description literally.
Use your reasoning to adapt the scenario to what's actually available on the page.

## AVAILABLE ELEMENTS
Look at the "Available elements" section in the system context above.
Use these elements to make the test work, even if they don't exactly match the scenario description.

## ADAPTIVE TESTING STRATEGY
- If the scenario asks for "dashboard" but you see "welcome page", use the welcome page
- If the scenario asks for "h1" but you see "h2", use the h2
- If the scenario asks for "Users" but you see "User Management", use what's available
- Prioritize test success over perfect scenario adherence

## Core Instructions
Generate Playwright code that:
1. Uses the ACTUAL elements from the page structure above (adapt if needed)
2. Waits for elements to be visible/enabled before interacting
3. Handles form submissions properly
4. Uses reasonable credentials (admin/admin_password for admin, user/password for user)
5. Prevents duplicate form submissions
6. Handles SPA navigation by waiting for content changes
7. **PRIORITIZE TEST SUCCESS** - make the test work with what's available

## FORM SUBMISSION HANDLING
When submitting forms that cause navigation:
1. Click the submit button
2. Wait for navigation to complete using URL changes or page element changes for the destination page
3. Include proper waits for the new page to load before proceeding

## Form Submission Navigation Pattern
When submitting forms that cause navigation:
1. Click the submit button
2. Wait for navigation to complete (URL change or new page elements)
3. Wait for elements that will exist on the destination page

## CRITICAL: Form Submission Navigation Waits
When submitting forms that cause navigation, ALWAYS wait for elements that will exist on the DESTINATION page, not the current page.
- For login forms: Wait for elements that will exist after successful login
- For registration forms: Wait for success page elements, NOT form elements
- For any form submission: Wait for the next page's content, not the current page's content

## CRITICAL: Use Only Actual Page Elements
- Use ONLY elements that exist in the "Available elements" section above
- DO NOT copy the element list into your code
- Generate clean Playwright code without any element listings
- Use selectors based on the actual page structure provided