Parse the scenario into a structured list of steps. Each step should be either an ACTION (what the user does) or a CHECK (what we verify).

ACTIONS - What the user performs:
- Click, select, navigate actions
- Form submissions with structured data
- Button presses
- Navigation to pages
- References to other scenarios using [ref: <scenario_name>] format

CHECKS - What we verify (only if explicitly mentioned in the scenario):
- Verification steps (verify, check, see, confirm, ensure)
- Observation steps (you should see, notice, observe)
- Descriptive text about what appears on screen
- Steps that describe what the user should see or notice

DO NOT INCLUDE:
- Implicit checks or assumptions
- Product decisions about what should happen
- Steps that describe expected behavior without explicit verification

FORM FILLING PATTERN - GROUP RELATED FIELDS:
- Instead of separate actions for each form field, group related fields into a single "fill form" action
- Use structured key-value format: "fill {field_name: value, field_name: value} in form"
- Examples:
  - "fill {field1: value1, field2: value2} in form"
  - "fill {name: Test User, email: test@example.com, role: user} in creation form"

IMPORTANT - USE GENERIC DESCRIPTIONS:
- Instead of "click \"Add New Item\"", use "navigate to creation UI" or "open creation modal"
- Instead of "click \"Submit\"", use "submit the form" or "submit the creation form"
- Instead of "click \"Login\"", use "submit authentication form" or "click the authentication button"
- Use generic terms that describe the action's purpose, not specific UI text

SCENARIO REFERENCES:
When the description mentions actions that are covered by other scenarios (like "authenticate as administrator", "create an item", etc.), reference them using the format:
[ref: <scenario_name>] <brief description>

CRITICAL RULES:
1. Never reference the current scenario you are processing
2. Only reference scenarios from the EXACT list below - use the exact scenario names provided
3. Do not invent or infer scenario names that are not in the list
4. If you need to reference a scenario but it's not in the list, just describe the action directly

Available scenarios for reference (use these exact names):
{% for scenario in available_scenarios %}
- {{ scenario.name }}: {{ scenario.description }}
{% endfor %}

OUTPUT FORMAT:
Return a JSON array where each step is an object with:
- "type": "action" or "check"
- "description": "human readable description"
- "action_type": "navigate|click|fill|submit" (for actions only)
- "check_type": "visible|text|url|count" (for checks only)
- "target": "what to interact with or check"
- "data": {"field": "value"} (for fill actions only)
- "expected": "expected value" (for checks only)

Example output:
[
  {
    "type": "action",
    "description": "navigate to login page",
    "action_type": "navigate",
    "target": "/login"
  },
  {
    "type": "action", 
    "description": "fill login form",
    "action_type": "fill",
    "target": "login form",
    "data": {"username": "admin", "password": "admin_password"}
  },
  {
    "type": "action",
    "description": "submit login form", 
    "action_type": "submit",
    "target": "login form"
  },
  {
    "type": "check",
    "description": "verify user is logged in",
    "check_type": "visible",
    "target": "dashboard",
    "expected": "dashboard visible"
  }
]

Write only the JSON array, no additional text.
