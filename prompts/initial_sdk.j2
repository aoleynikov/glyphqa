# GlyphQA System SDK

## Overview
This document defines the common patterns and reusable functions identified across {{ guide_count }} scenarios to ensure consistent, maintainable test automation.

## LLM Pattern Analysis

The following patterns were identified by analyzing the current scenario guides:

{{ llm_analysis }}

## Implementation Guidelines

### Function Naming
- **Main Scenario Functions**: Named after the scenario (e.g., `createUser`, `loginAsAdmin`)
- **Action Functions**: Descriptive names for individual actions (e.g., `fillLoginForm`, `submitUserCreationForm`)
- **Reference Functions**: Imported from dependency specs (e.g., `loginAsAdmin` from login_as_admin.spec.js)

### Code Structure
- **Imports**: Always start with Playwright imports
- **Navigation**: Always begin with `await page.goto('/')`
- **Action Functions**: Define individual actions as separate async functions
- **Main Function**: Orchestrates the scenario by calling action functions in sequence
- **Exports**: Export all functions for potential reuse

### Error Handling
- **Wait Strategies**: Use appropriate wait conditions for UI elements
- **Verification**: Include verification steps after critical actions
- **Fallbacks**: Graceful handling of missing elements or unexpected states

## Maintenance Notes
- This SDK design is automatically generated based on LLM analysis of actual scenario patterns
- New patterns should be added as they emerge from additional scenarios
- Function implementations should follow the documented patterns for consistency
