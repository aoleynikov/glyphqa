import { test, expect } from '@playwright/test';
import * as sdk from '../sdk.js';

test.describe('Debug Page State', () => {
  test('Capture page state after actions', async ({ page }) => {
    // Set a reasonable timeout for debug execution
    test.setTimeout(10000);
{% if not has_initial_navigation %}
    await page.goto('/');
{% endif %}
    
    try {
{% for line in js_lines %}
{% if line.strip() and not line.strip().startswith('//') %}
        try {
            {{ line }}
        } catch (stepError) {
            console.log('Step failed:', '{{ line }}', stepError.message);
        }
{% endif %}
{% endfor %}
    } catch (error) {
        console.log('Step execution failed:', error.message);
    }
    
    // Capture comprehensive page state
    const pageState = await page.evaluate(() => {
      const context = {
        url: window.location.href,
        title: document.title,
        timestamp: new Date().toISOString()
      };
      
      const allElements = document.querySelectorAll('h1, h2, h3, h4, h5, h6, nav, button, a, input, form, select, textarea, span, div[role="button"], [data-testid], [aria-label]');
      context.elements = Array.from(allElements).map(el => {
        return {
          tag: el.tagName.toLowerCase(),
          textContent: el.textContent?.trim() || null,
          className: el.className || null,
          id: el.id || null,
          type: el.type || null
        };
      }).filter(el => el !== null);
      
      return context;
    });
    
    console.log('Page State:', JSON.stringify(pageState, null, 2));
  });
});
